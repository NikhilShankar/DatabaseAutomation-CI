name: CI Pipeline

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: rootpass
          MYSQL_DATABASE: nyc311
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Wait for MySQL to be ready
        run: |
          for i in {1..30}; do
            if mysqladmin ping -h 127.0.0.1 -u root -prootpass --silent; then
              echo "MySQL is ready!"
              break
            fi
            echo "Waiting for MySQL... ($i/30)"
            sleep 2
          done

      - name: Load database schema
        run: |
          mysql -h 127.0.0.1 -u root -prootpass nyc311 < db/schema.sql

      - name: Create temporary ETL config for fixture
        run: |
          # Temporarily replace the CSV path in etl.py to use fixture
          sed -i "s|CSV_FILE = 'data/data_311_Jan_2025.csv'|CSV_FILE = 'tests/fixtures/311_sample.csv'|g" etl/etl.py

      - name: Run ETL on fixture CSV
        env:
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_USER: root
          DB_PASSWORD: rootpass
          DB_NAME: nyc311
        run: |
          python etl/etl.py

      - name: Verify data loaded
        run: |
          mysql -h 127.0.0.1 -u root -prootpass nyc311 -e "SELECT COUNT(*) as total FROM service_requests;"
          mysql -h 127.0.0.1 -u root -prootpass nyc311 -e "SELECT * FROM service_requests LIMIT 3;"

      - name: Start Flask app in background
        env:
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_USER: root
          DB_PASSWORD: rootpass
          DB_NAME: nyc311
        run: |
          python -m flask --app app/main.py run --host=0.0.0.0 --port=5000 &
          echo $! > flask.pid
          sleep 5

      - name: Wait for Flask to be ready
        run: |
          for i in {1..30}; do
            if curl -s http://localhost:5000 > /dev/null; then
              echo "Flask is ready!"
              break
            fi
            echo "Waiting for Flask... ($i/30)"
            sleep 2
          done

      - name: Install Chrome and ChromeDriver
        run: |
          sudo apt-get update
          sudo apt-get install -y wget unzip
          wget -q https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
          sudo apt-get install -y ./google-chrome-stable_current_amd64.deb

      - name: Run Selenium tests
        run: |
          pytest tests/selenium_test.py -v --tb=short

      - name: Stop Flask app
        if: always()
        run: |
          if [ -f flask.pid ]; then
            kill $(cat flask.pid) || true
          fi

      - name: Show logs on failure
        if: failure()
        run: |
          echo "=== Flask logs ==="
          cat flask.log || echo "No Flask logs found"
          echo "=== MySQL logs ==="
          docker logs $(docker ps -q --filter ancestor=mysql:8.0) || echo "No MySQL container found"
